---
title: "Sensory priming in aphantasia - Data analysis"
author: "MaÃ«l Delem"
format: html
code-fold: true
warning: false
error: false
message: false
cap-location: bottom
editor_options: 
  chunk_output_type: console
---

Below is the setup code, including two essential steps: 1) installing the required packages for this data analysis, and 2) importing data into the dataframes used throughout. I left this step there for reference in a view of transparency for the interested reader.

```{r setup}

# --- Packages -----------------------------------------------------------------

# The package `librairian` will ease the package management with the "shelf" 
# function, which automatically: 
# 1) checks if a package is installed 
# 2) installs it if need be
# 3) loads the package like the "library()" function would.
if (!require(librarian)) install.packages(librarian)
library(librarian)

# now putting packages on our library's shelves:
shelf(
  # the basics
  tidyverse,
  # Excel files management
  readxl,
  # --- data analysis packages:
  broom,         # tidy modelling
  easystats,      # framework for data analysis functions
  brms,           # bayesian modeling
  # MASS,           # Box-Cox transformation
  # cluster,        # self-explanatory (i.e. cluster analyses)
  # mclust,         # mixture clustering
  # factoextra,     # multivariate analysis visualization
  # FactoMineR,     # multivariate analysis
  # rstanarm,       # bayesian models
  # BayesFactor,    # self-explanatory (i.e. Bayes Factors)
  # --- data visualization/exploration packages:
  ggpubr,         # layout and statistics display
  ggradar,        # radar charts
  ggsci,          # scientific palettes
  wesanderson,    # artistic palettes
  viridis,        # colour-blind friendly palettes
  # --- tables ---
  # qwraps2,        # mean_sd function
)

# --- Global cosmetic theme ----------------------------------------------------
theme_set(
  theme_bw(
    base_size = 14,
    base_family = "serif",
  )
)

# creating colour-blind friendly coulour palettes
# duo_pal <- c("#003d73", "#889be0")
# trio_pal <- c("#f2bb7b", "#e57774", "#6c0009")
# full_pal <- c("#f2bb7b", "#e57774", "#6c0009", "#003d73", "#889be0")

# table formatting
# options(qwraps2_markup = "")
# options(
#   knitr.kable.NA = '',
#   knitr.table.format = "markdown")

# --- Fixing a seed for reproducibility ----------------------------------------
set.seed(14051998)

# --- Importing data -----------------------------------------------------------

# Association task
df_asso <- read_excel("data/aphantasia_priming_tidy_data.xlsx", 
                     sheet = "data_asso")

# Implicit task
df_implicit <- read_excel("data/aphantasia_priming_tidy_data.xlsx", 
                     sheet = "data_implicit")

# Explicit task
df_explicit <- read_excel("data/aphantasia_priming_tidy_data.xlsx", 
                     sheet = "data_explicit")

# Rotation task
df_rotation <- read_excel("data/aphantasia_priming_tidy_data.xlsx", 
                     sheet = "data_rotation")

# Questionnaires
df_questionnaires <- read_excel("data/aphantasia_priming_tidy_data.xlsx", 
                     sheet = "data_questionnaires")
```

## Exploratory Data Analysis

The four questionnaire variables (VVIQ, OSIQ-O and S, and SUIS) are meant to be used as predictors (independent variables) for the behavioural outcomes (RTs) of the study. Three of these - VVIQ, OSIQ-O and SUIS - evaluate visual imagery: as such, in a view of parsimony, we are going to evaluate the correlation between these continuous predictors.

```{r}
#| label: fig
# Correlation between questionnaire scores
cor_questionnaires <- 
  df_questionnaires %>% 
  select(vviq80:suis60) %>% 
  correlation(
    bayesian = TRUE)

cor_questionnaires %>% summary %>% plot
```


```{r}
cor_test(df_questionnaires, "vviq80", "suis60", bayesian = TRUE) %>% plot
cor_test(df_questionnaires, "vviq80", "osiq_o75", bayesian = TRUE) %>% plot
cor_test(df_questionnaires, "vviq80", "osiq_s75", bayesian = TRUE) %>% plot
cor_test(df_questionnaires, "osiq_o75", "osiq_s75", bayesian = TRUE) %>% plot

```






























